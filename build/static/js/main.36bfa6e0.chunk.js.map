{"version":3,"sources":["components/Drawer/Drawer.css","components/Stats/Stats.css","containers/Games/MemoryGame/Card/Card.css","containers/Games/Minesweeper/MineField/MineField.css","components/UI/Tab/Tab.css","components/FinishGame/FinishGame.css","containers/Games/Snake/Snake.css","containers/Games/Snake/GameArea/GameArea.css","containers/Games/MemoryGame/Dashboard/Dashboard.css","index.css","hoc/Layout/Layout.css","components/Menu/Menu.css","components/UI/BackDrop/BackDrop.css","containers/GameList/GameList.css","components/Navigation/Navigation.css","components/UI/Input/Input.css","components/UI/Button/Button.css","containers/Games/Snake/Target.css","containers/Games/Snake/SnakeDot.css","containers/Games/MemoryGame/MemoryGame.css","components/Timer/Timer.css","containers/Games/Minesweeper/Minesweeper.css","containers/Games/Minesweeper/Cell/Cell.css","components/UI/BackDrop/BackDrop.js","components/Drawer/Drawer.js","components/UI/Tab/Tab.js","components/Stats/Stats.js","containers/Games/MemoryGame/Card/Card.js","components/Timer/Timer.js","components/UI/Button/Button.js","containers/Games/MemoryGame/Dashboard/Dashboard.js","components/UI/Input/Input.js","Auxillary/Validation/Validation.js","components/FinishGame/FinishGame.js","containers/Games/MemoryGame/MemoryGame.js","containers/Games/Snake/SnakeDot.js","containers/Games/Snake/Target.js","containers/Games/Snake/GameArea/GameArea.js","containers/Games/Snake/Snake.js","components/Navigation/Navigation.js","containers/GameList/Gamelist.js","components/Menu/Menu.js","containers/Games/Minesweeper/Cell/Cell.js","containers/Games/Minesweeper/MineField/MineField.js","containers/Games/Minesweeper/Minesweeper.js","App.js","hoc/Layout/Layout.js","serviceWorker.js","index.js"],"names":["module","exports","BackDrop","props","onClick","className","classes","Drawer","cls","clsButton","isOpen","push","open","close","join","toggleDrawer","style","textDecoration","to","Tab","tab","name","active","tabIndex","children","Stats","game","location","state","loading","leaderboard","activeTab","done","sortResponse","leaders","isNaN","result","sort","a","b","Number","replace","handleResponse","data","keys","Object","map","key","person","setState","this","getData","tubName","axios","get","then","res","catch","err","console","log","TabsDiv","switchTab","ldsring","leader","index","id","firstName","lastName","Component","Card","cardState","img","cardFlip","interval","Timer","timer","date","Date","setTimer","differece","currentMins","getMinutes","currentSec","getSeconds","setInterval","handleTime","clearInterval","Button","disabled","Dashboard","content","start","cardList","card","shuffleCards","stopTimer","Input","htmlFor","type","onChange","Validation","isValid","length","match","FinishGame","showStats","personInfoHandler","e","window","event","score","time","target","value","trim","Validate","sendData","post","status","error","pathname","inputs","startNew","MemoryGame","counter","turn","cardCount","generateCards","cards","imgNum","i","activeCards","isFinished","cardContent","cardFlipHandler","cardId","forEach","checkMatching","Math","random","timeout","setTimeout","flipBackHandler","clearTimeout","timeout2","finishGame","SnakeDot","cordinates","cordinate","left","top","Target","backgroundColor","GameArea","Score","targetCords","startGame","tick","Snake","getTargetCords","round","speed","direction","onKeyDown","document","onkeydown","setDirection","keyCode","checkArea","snakeHead","checkSelfHit","snakeCords","pop","cord","checkTargetHit","gameOver","shift","controls","onTouchStart","Navigation","url","Gamelist","GameList","Menu","Cell","cell","onToggleMarked","clazz","color","epicenter","isMine","marked","splice","onContextMenu","MineField","cells","started","win","flaggedCount","mineCount","saveResults","field","header","Flags","TimerDiv","Minesweeper","cellCount","generateCells","x","y","cellArr","onGameWin","JSON","parse","stringify","openned","filter","el","wrongFlags","idx","findIndex","generateMines","revealEmpty","openCell","getNeighbours","cellIdx","neighbourCells","mineArr","mine","setNumbers","preventDefault","withLayout","WrappedComponent","Layout","path","exact","component","Boolean","hostname","app","Index","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36bfa6e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer___3vVJZ\",\"open\":\"Drawer__open___XzWAV\",\"close\":\"Drawer__close___3Ddcc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stats\":\"Stats__Stats___F33My\",\"TabsDiv\":\"Stats__TabsDiv___2pKAK\",\"loader\":\"Stats__loader___2Ch6I\",\"ldsring\":\"Stats__ldsring___2FkAp\",\"lds-ring\":\"Stats__lds-ring___VgulR\",\"ButtonDiv\":\"Stats__ButtonDiv___1hyFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card__Card___1hLlG\",\"Back\":\"Card__Back___1npfg\",\"Front\":\"Card__Front___9n4gs\",\"img_1\":\"Card__img_1____dj2Q\",\"img_2\":\"Card__img_2___W4W5o\",\"img_3\":\"Card__img_3___PLeoc\",\"img_4\":\"Card__img_4___2OFpm\",\"img_5\":\"Card__img_5___7p706\",\"img_6\":\"Card__img_6___KFOV0\",\"img_7\":\"Card__img_7___3aiXz\",\"img_8\":\"Card__img_8___2xjld\",\"img_9\":\"Card__img_9___3j_B_\",\"img_10\":\"Card__img_10___3hRjl\",\"img_11\":\"Card__img_11___2FFoi\",\"img_12\":\"Card__img_12___2Ociu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MineField\":\"MineField__MineField___2ltSN\",\"TimerDiv\":\"MineField__TimerDiv___243WH\",\"Flags\":\"MineField__Flags___1c8xe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tab\":\"Tab__Tab___14e1b\",\"active\":\"Tab__active___1lvsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishGame\":\"FinishGame__FinishGame___1DOLG\",\"inputs\":\"FinishGame__inputs___2nA1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake\":\"Snake__Snake___1TMtE\",\"controls\":\"Snake__controls___2I5gs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameArea\":\"GameArea__GameArea___1giao\",\"Score\":\"GameArea__Score___1D7VO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard__Dashboard___2kqn7\",\"Timer\":\"Dashboard__Timer___165DJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Index\":\"index__Index___2BZWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout___2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu__Menu___l3EzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop__BackDrop___wZny4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameList\":\"GameList__GameList___1QyfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation__Navigation___2telG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input___s67N0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button___QI7b2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Target\":\"Target__Target___cetQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SnakeDot\":\"SnakeDot__SnakeDot___3Uuil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MemoryGame\":\"MemoryGame__MemoryGame___3tkag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timer\":\"Timer__Timer___vJ6dw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Minesweeper\":\"Minesweeper__Minesweeper___INENJ\",\"MemoryGame\":\"Minesweeper__MemoryGame___2sIbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cell\":\"Cell__Cell___dKMvy\"};","import React from 'react'\r\nimport classes from './BackDrop.css'\r\n\r\nconst BackDrop = props => {\r\n    return (\r\n        <div\r\n        onClick={props.onClick}\r\n        className={classes.BackDrop}\r\n        >       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackDrop\r\n","import React from 'react'\r\nimport classes from './Drawer.css'\r\nimport BackDrop from '../UI/BackDrop/BackDrop'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Drawer = props => {\r\n   const cls = [classes.Drawer]\r\n   const clsButton = ['fa']\r\n    if(props.isOpen){\r\n         clsButton.push('fa-times')\r\n         cls.push(classes.open)\r\n        }else {\r\n             clsButton.push('fa-bars')\r\n             cls.push(classes.close)\r\n            }\r\n    return (\r\n            <>\r\n                <div className={cls.join(' ')}>\r\n                    <i onClick={props.toggleDrawer} className={clsButton.join(' ')}></i>\r\n                    <ul onClick={props.toggleDrawer}>\r\n                        <Link style={{ textDecoration: 'none' }}\r\n                              to={\"/\"}\r\n                        >\r\n                            <li>Games</li>\r\n                        </Link>\r\n\r\n                        <Link style={{ textDecoration: 'none' }}\r\n                               to={\"/stats\"}\r\n                        >\r\n                            <li>Statistics</li>\r\n                        </Link>\r\n                    </ul>\r\n                </div>\r\n              {props.isOpen ? <BackDrop  onClick={props.toggleDrawer}/> : null}\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Drawer\r\n","import React from 'react'\r\nimport classes from './Tab.css'\r\n\r\nconst Tab = props => {\r\n    const cls = [classes.Tab]\r\n    if(props.tab === props.name){   \r\n            cls.push(classes.active)\r\n    }\r\n\r\n    return (   \r\n        <div tabIndex=\"-1\" className={cls.join(' ')} onClick={props.onClick} >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tab\r\n","import React, { Component } from 'react'\r\nimport classes from './Stats.css'\r\nimport axios from 'axios'\r\nimport Tab from '../UI/Tab/Tab'\r\n\r\nexport class Stats extends Component {\r\n\r\n    game = this.props.location.state ? this.props.location.state.game : \"Memory_Game\"\r\n    \r\n    \r\n    state={\r\n        loading: true,\r\n        leaderboard: [],\r\n        activeTab: this.game,\r\n        done: false\r\n    }\r\n\r\n    componentDidMount(){  \r\n        this.getData(this.state.activeTab)\r\n    }\r\n\r\n    switchTab(tubName){ \r\n        this.setState({ activeTab: tubName })     \r\n    }\r\n\r\n    async getData(name){ \r\n        await axios.get(`https://fun-games-46704.firebaseio.com/${name}.json`)\r\n                       .then(res => {\r\n                        this.handleResponse(res.data)\r\n                       })\r\n                       .catch(err => {\r\n                          console.log(err)\r\n                       })              \r\n            }\r\n\r\n        sortResponse = leaders => {\r\n            if(isNaN(leaders[0].result)){\r\n                leaders.sort((a,b) => {\r\n                    return  Number(a.result.replace(/:/g,'')) - Number(b.result.replace(/:/g,''))\r\n                  })\r\n            }else {\r\n                leaders.sort((a,b) => {\r\n                    return   b.result - a.result \r\n                  })\r\n            }\r\n        }\r\n\r\n        handleResponse = data => {\r\n            const keys = Object.keys(data)\r\n            const leaders = []\r\n\r\n            if(data) {                \r\n               keys.map(key => {\r\n                    const person = data[key]                  \r\n                    return leaders.push(person)                   \r\n                })\r\n            }\r\n\r\n            this.sortResponse(leaders)\r\n\r\n            this.setState({\r\n                loading: false,\r\n                leaderboard: leaders\r\n            })\r\n        }\r\n\r\n    render() { \r\n         const leaderboard = [...this.state.leaderboard]\r\n        return (\r\n            <div className={classes.Stats}>\r\n                <h1>Leaderboard</h1>\r\n                <div className={classes.TabsDiv}>\r\n                    <Tab onClick={() => { this.getData('Memory_Game'); this.switchTab(\"Memory_Game\") }} name=\"Memory_Game\" tab={this.state.activeTab}>Memory Game</Tab> \r\n                    <Tab onClick={() => { this.getData('Snake'); this.switchTab(\"Snake\") }} name=\"Snake\" tab={this.state.activeTab}>Snake Game</Tab>\r\n                    <Tab onClick={() => { this.getData('Minesweeper'); this.switchTab(\"Minesweeper\") }} name=\"Minesweeper\" tab={this.state.activeTab}>Minesweeper</Tab>\r\n                </div>\r\n                { this.state.loading\r\n                ? <div className={'loader'}><div className={classes.ldsring}><div></div><div></div><div></div><div></div></div></div> ////Loading\r\n                : <ol>\r\n                   { leaderboard.map((leader, index) => {\r\n                       return(\r\n                        <li key={index} id={index}> { leader.firstName + ' ' + leader.lastName }\r\n                            <strong>{ leader.result }</strong>\r\n                        </li>\r\n                       )\r\n                   })}\r\n                  </ol>                 \r\n                }               \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stats\r\n","import React from 'react'\r\nimport classes from './Card.css'\r\n\r\nconst Card = props => {\r\n    const cls = [classes.Card, classes[props.cardState]]\r\n    if(props.cardState === 'Front'){\r\n        cls.push(classes[props.img])\r\n    }  \r\n\r\n    return (\r\n        <div \r\n        className={cls.join(' ')}\r\n        onClick={()=>props.cardFlip(props.id)}\r\n        >     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import classes from './Timer.css'\r\nimport React, { Component } from 'react'\r\n\r\nlet interval = null\r\n\r\nclass Timer extends Component {\r\n        state = {\r\n            timer: '00:00'\r\n        }\r\n\r\n        date = new Date()\r\n\r\n    setTimer = () =>{\r\n        const currentDate = new Date()\r\n        const differece = currentDate - this.date\r\n        let currentMins = new Date(differece).getMinutes()\r\n        let currentSec = new Date(differece).getSeconds()\r\n        if(currentMins < 10) { \r\n            currentMins = '0' + currentMins\r\n        }\r\n        if(currentSec<10) { \r\n            currentSec = '0' + currentSec \r\n        }\r\n        this.setState({\r\n            timer: currentMins + \":\" + currentSec\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Timer}>   \r\n               Time: {this.state.timer}\r\n            </div>\r\n        )\r\n    } \r\n    componentDidMount() {\r\n        interval = setInterval(() => {\r\n            this.setTimer()\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.props.handleTime(this.state.timer)\r\n        clearInterval(interval)\r\n    }\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\nimport classes from './Button.css'\r\n\r\nconst Button = props => {\r\n    return (\r\n            <button className={classes.Button}\r\n             onClick={props.onClick}\r\n             disabled = {props.disabled} \r\n            >\r\n                {props.children}\r\n            </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport classes from './Dashboard.css'\r\n\r\nimport Card from '../Card/Card'\r\nimport Timer from '../../../../components/Timer/Timer'\r\nimport Button from '../../../../components/UI/Button/Button'\r\n\r\nconst Dashboard = props => {\r\n    let content = null\r\n    if (!props.start){\r\n        content = <Button onClick={props.shuffleCards}>Start</Button>\r\n      \r\n        } else{   \r\n             content = props.cardList.map(card =>{ \r\n                        return <Card \r\n                        key={card.id}\r\n                        cardFlip={props.cardFlip}\r\n                        { ...card }\r\n                        />\r\n                    })\r\n            }   \r\n\r\n    return (\r\n            <>\r\n                <div className={classes.Timer}>{!props.stopTimer ? <Timer handleTime={props.handleTime}/> : null }</div>\r\n                <div className={classes.Dashboard}>\r\n                    { content }\r\n                </div>\r\n                \r\n            </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n","import React from 'react'\r\nimport classes from './Input.css'\r\n\r\nconst Input = props => {\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={props.name} >{props.name}</label>\r\n            <input className={classes.Input} name={props.name} \r\n                   type =\"text\" onChange={props.onChange}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","export default function Validation(firstName, lastName) {\r\n\r\n    let isValid = true\r\n \r\n    if(!firstName  || !lastName){\r\n        isValid = false\r\n    }\r\n\r\n    if(lastName.length < 2 || firstName.length < 2){\r\n        isValid = false\r\n    }\r\n\r\n     if(!lastName.match(/^[a-zA-Z]+$/) || !firstName.match(/^[a-zA-Z]+$/)) {\r\n         isValid = false\r\n     }\r\n\r\n    return isValid\r\n}","import React, { Component } from 'react'\r\nimport classes from './FinishGame.css'\r\n\r\nimport Button from '../UI/Button/Button'\r\nimport Input from '../UI/Input/Input'\r\nimport axios from 'axios'\r\n\r\nimport Validate from '../../Auxillary/Validation/Validation'\r\nimport { Redirect } from 'react-router'\r\n\r\nclass FinishGame extends Component  {\r\n\r\n        state = {\r\n            data: {\r\n                firstName: '',\r\n                lastName: '',\r\n                result: ''\r\n            },\r\n            showStats: false,\r\n            isValid: false\r\n        }\r\n   \r\n    \r\n    personInfoHandler = (e) => {\r\n\r\n        e = e || window.event \r\n        \r\n         const data = {...this.state.data}\r\n         let isValid = this.state.isValid\r\n         data.result = this.props.score || this.props.time\r\n        if(e.target.name ==='First Name:'){\r\n         data.firstName = e.target.value.trim()\r\n        }\r\n        if(e.target.name ==='Last Name:'){\r\n         data.lastName = e.target.value.trim()\r\n        }\r\n\r\n        isValid = Validate(data.firstName, data.lastName)\r\n        this.setState({ data, isValid })\r\n    }\r\n  \r\n    sendData = () => {  \r\n        const game = this.props.game \r\n\r\n        axios.post(`https://fun-games-46704.firebaseio.com/${game}.json`, this.state.data)\r\n        .then(res=>{\r\n            if(res.status === 200){\r\n                this.setState({showStats: true})\r\n            }\r\n        })\r\n        .catch(error => {\r\n        console.log(error)\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const result = this.props.time || this.props.score\r\n\r\n        return (\r\n            <>\r\n            {!this.state.showStats?   \r\n            (<div className={classes.FinishGame}>\r\n                <h1>Game Over!</h1>\r\n                <h2>Your result is <strong>{ result }</strong>{this.props.time ? ' s!' : ' pts!'}</h2>\r\n                <div className={classes.inputs}>\r\n                    <Input name=\"First Name:\"  onChange={this.personInfoHandler}  />\r\n                    <Input name=\"Last Name:\" onChange={this.personInfoHandler} />\r\n                    <div>\r\n                        <Button onClick={this.props.startNew}>New Game</Button>\r\n                        <Button onClick={this.sendData} disabled={!this.state.isValid}>Save Results</Button>\r\n                    </div>\r\n                </div>\r\n                \r\n               \r\n            </div>): <Redirect to={{ pathname: \"/stats\", state: {game: this.props.game} }} /> \r\n            } \r\n            </>\r\n    )}\r\n    \r\n}\r\n\r\nexport default FinishGame\r\n","import React, { Component } from 'react'\r\nimport classes from './MemoryGame.css'\r\n\r\nimport Dashboard from './Dashboard/Dashboard'\r\nimport FinishGame from '../../../components/FinishGame/FinishGame'\r\n\r\nclass MemoryGame extends Component {\r\n\r\n        counter = 0;\r\n        turn = true\r\n        cardCount = 24\r\n\r\n        generateCards =(length)=> {\r\n            const cards = []\r\n            let imgNum = 1\r\n            let id = 1\r\n            for(let i=0; i<length; i++){\r\n                cards.push( {img: `img_${imgNum}`, id: id, cardState: 'Back'})\r\n                id++\r\n                if(i%2===1){ imgNum++}\r\n            }\r\n            return cards\r\n        }\r\n\r\n        state={\r\n            time: null,\r\n            activeCards: [],\r\n            start: false,\r\n            stopTimer: true,\r\n            isFinished: false,\r\n            cardContent: this.generateCards(this.cardCount)\r\n        }  \r\n\r\n    cardFlipHandler = cardId => { \r\n       const cards = [...this.state.cardContent]\r\n       const activeCards = [...this.state.activeCards]\r\n      \r\n        cards.forEach(card => {\r\n\r\n            if(card.id === cardId && card.cardState === 'Back' && activeCards.length < 2){\r\n                card.cardState = 'Front'\r\n                activeCards.push(card)\r\n             }                \r\n        })\r\n\r\n       this.setState({ cardContent: cards, activeCards })\r\n\r\n        if(activeCards.length === 2 && this.turn){\r\n            this.turn=false\r\n            this.checkMatching(activeCards)\r\n        }\r\n\r\n    }\r\n\r\n    shuffleCards = () => { \r\n        const cards = [...this.state.cardContent].sort(() => Math.random() - 0.5)\r\n        cards.forEach(card => { card.cardState = 'Back'}) \r\n       \r\n            this.setState({\r\n                stopTimer: false,\r\n                isFinished: false,\r\n                cardContent: cards,\r\n                start: true\r\n                })\r\n            \r\n    }\r\n\r\n    checkMatching = activeCards => {\r\n      \r\n        if(activeCards[0].img === activeCards[1].img){         \r\n            this.setState({ activeCards: [] })\r\n            this.counter++\r\n            this.turn=true  \r\n        } else {\r\n         const timeout = window.setTimeout(()=>{\r\n             this.flipBackHandler(activeCards)\r\n             this.turn=true  \r\n             window.clearTimeout(timeout)\r\n        }, 1000)\r\n          }\r\n\r\n        if(this.counter >= this.state.cardContent.length/2){\r\n            this.setState({stopTimer: true})\r\n            const timeout2 = window.setTimeout(()=>{\r\n                this.finishGame()\r\n                window.clearTimeout(timeout2)\r\n           }, 1200)\r\n        }\r\n       \r\n    }\r\n    \r\n    flipBackHandler = activeCards => {\r\n        const cards = [...this.state.cardContent]\r\n\r\n        cards.forEach(card => {\r\n            if(card.id === activeCards[0].id || card.id === activeCards[1].id){\r\n                card.cardState = 'Back'\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            cardContent: cards,\r\n            activeCards: []\r\n        })\r\n    } \r\n\r\n    finishGame = () => {\r\n        this.setState({\r\n            isFinished: true,\r\n            activeCards: [],\r\n            start:false\r\n        })  \r\n        this.counter = 0  \r\n    }\r\n\r\n    handleTime = time => {\r\n            this.setState({ time })      \r\n    }\r\n   \r\n    render() {\r\n        return (           \r\n            <div className={classes.MemoryGame}>                       \r\n               {\r\n               this.state.isFinished \r\n               ? <FinishGame game={\"Memory_Game\"} startNew={this.shuffleCards} time={this.state.time} />\r\n               : <Dashboard\r\n                 stopTimer={this.state.stopTimer}\r\n                 cardList={this.state.cardContent}\r\n                 cardFlip={this.cardFlipHandler} \r\n                 start={this.state.start}\r\n                 shuffleCards={this.shuffleCards}\r\n                 handleTime={this.handleTime}\r\n                 />\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemoryGame\r\n","import React from 'react'\r\nimport classes from './SnakeDot.css'\r\n\r\nconst SnakeDot = props => {\r\n    let content = null\r\n    content = props.cordinates.map((cordinate, index) => {\r\n    return  (<div \r\n            key={index}\r\n            style = {{ left: cordinate[0] +'%', top: cordinate[1] + '%'}}\r\n            className={classes.SnakeDot}\r\n            >\r\n            </div>)\r\n    })\r\n\r\n    return (\r\n        <>\r\n       {content}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default SnakeDot\r\n","import React from 'react'\r\nimport classes from './Target.css'\r\n\r\nconst Target = props => {\r\n    const cordinate = props.cordinate\r\n    return (\r\n        <div \r\n        className={classes.Target}\r\n        style = {{backgroundColor: '#fff', left: cordinate[0] +'%', top: cordinate[1] + '%'}}\r\n        >    \r\n        </div>\r\n    )\r\n}\r\nexport default Target\r\n","import React from 'react'\r\nimport classes from './GameArea.css'\r\n\r\nimport SnakeDot from '../SnakeDot'\r\nimport Button from '../../../../components/UI/Button/Button'\r\nimport Target from '../Target'\r\n\r\n\r\nconst GameArea = props => {\r\n    \r\n    return (\r\n        <>\r\n        <div className={classes.Score}> {props.start ? `Score - ${props.score}` : null }</div>\r\n       \r\n        <div className={classes.GameArea}>\r\n           {\r\n           !props.start\r\n            ?<Button onClick={props.startGame}>Start</Button>\r\n            :<>\r\n            <Target cordinate ={props.targetCords} />\r\n            <SnakeDot cordinates={props.cordinates} />\r\n            </>\r\n           }\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GameArea\r\n","import React, { Component } from 'react'\r\nimport classes from './Snake.css'\r\n\r\nimport GameArea from './GameArea/GameArea'\r\nimport FinishGame from '../../../components/FinishGame/FinishGame'\r\n\r\nlet interval = null\r\nlet tick = false\r\n\r\nclass Snake extends Component {\r\n\r\n    getTargetCords = () => {\r\n        const x = Math.round(Math.random()*49 )* 2\r\n        const y = Math.round(Math.random()*49 )* 2\r\n        return [x, y]\r\n    }\r\n\r\n    state = {\r\n        start: false,\r\n        isFinished: false,\r\n        score: 0,\r\n        speed: 250,\r\n        direction: 39,\r\n        targetCords: this.getTargetCords(),\r\n        cordinates: [\r\n            [0, 0],\r\n            [2, 0],\r\n        ]\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.onkeydown = null\r\n        window.clearInterval(interval)\r\n    }\r\n   \r\n    startGame = () => {\r\n     this.setState({start: true,  isFinished: false, score: 0,}) \r\n     interval = window.setInterval(this.onKeyDown, this.state.speed)\r\n     document.onkeydown = this.setDirection\r\n    }\r\n\r\n    setDirection = (e) => {   \r\n        const direction = e.keyCode || e\r\n        if(direction  && tick === true){\r\n\r\n        switch(direction){\r\n            case 37:\r\n            if(this.state.direction !== 39){ this.setState({ direction }) \r\n             }\r\n            break;\r\n            case 38:\r\n            if(this.state.direction !== 40){ this.setState({ direction }) }\r\n            break;\r\n            case 39:\r\n            if(this.state.direction !== 37){ this.setState({ direction }) }\r\n            break;\r\n            case 40:\r\n            if(this.state.direction !== 38){ this.setState({ direction }) }\r\n            break;\r\n            default:\r\n            }     \r\n        }\r\n        tick = false\r\n    }\r\n\r\n    checkArea = snakeHead => {\r\n        if(snakeHead[0] < 0 || snakeHead[1] > 98 || snakeHead[1] < 0 || snakeHead[0] > 98){\r\n            return true\r\n        }else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    checkSelfHit = (snakeHead) => {\r\n        let state = false\r\n        let snakeCords = [...this.state.cordinates]\r\n        snakeCords.pop()\r\n        snakeCords.forEach(cord => {\r\n            if(snakeHead[0] === cord[0] && snakeHead[1] === cord[1]){\r\n                state = true\r\n            }\r\n        })\r\n\r\n       return state\r\n    }\r\n\r\n    checkTargetHit = (snakeHead) => {\r\n        if(snakeHead[0] === this.state.targetCords[0] && snakeHead[1] === this.state.targetCords[1]){\r\n\r\n            let { speed } = this.state\r\n            this.setState(({ score }) => {\r\n                return  { score: score + 100 }\r\n            })\r\n\r\n            if(speed > 30){ \r\n                this.setState(({speed}) => {\r\n                    return { speed: speed - 5 }\r\n                })\r\n            }\r\n\r\n            this.setState({ targetCords: this.getTargetCords() })\r\n            \r\n           window.clearInterval(interval)\r\n           interval = window.setInterval(this.onKeyDown, this.state.speed)\r\n            return true\r\n        }\r\n    }\r\n\r\n    gameOver() {\r\n        this.setState({\r\n            start: false,\r\n            speed: 250,\r\n            direction: 39,\r\n            cordinates: [\r\n                [0, 0],\r\n                [2, 0],\r\n            ],\r\n            isFinished: true,\r\n        }) \r\n        document.onkeydown = null\r\n    }\r\n\r\n    onKeyDown = () => {  \r\n        let snakeCords = [...this.state.cordinates]\r\n        let snakeHead = snakeCords[snakeCords.length - 1]\r\n\r\n        switch(this.state.direction){\r\n         case 37:\r\n          snakeHead = [snakeHead[0] - 2, snakeHead[1]]\r\n            break;\r\n         case 38:\r\n            snakeHead = [snakeHead[0], snakeHead[1] - 2]\r\n            break;\r\n         case 39:\r\n            snakeHead = [snakeHead[0] + 2, snakeHead[1]]\r\n            break;\r\n         case 40:\r\n            snakeHead = [snakeHead[0], snakeHead[1] + 2]\r\n            break;\r\n            default:\r\n        }\r\n        if(!this.checkArea(snakeHead) && !this.checkSelfHit(snakeHead)){\r\n           if(!this.checkTargetHit(snakeHead)){\r\n            snakeCords.shift()\r\n           }\r\n            snakeCords.push(snakeHead)\r\n            this.setState({ cordinates: snakeCords })\r\n              tick = true\r\n        }else {\r\n            window.clearInterval(interval)\r\n            const timeout = window.setTimeout(()=>{\r\n                this.gameOver()\r\n                window.clearTimeout(timeout)\r\n           }, 1200)\r\n         \r\n        }\r\n           \r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={classes.Snake}>\r\n                    {!this.state.isFinished\r\n                    ?<> <GameArea \r\n                       setDirection={this.setDirection}\r\n                       score={this.state.score}\r\n                       cordinates={this.state.cordinates}\r\n                       start={this.state.start}\r\n                       handleTime={this.handleTime}\r\n                       targetCords={this.state.targetCords}\r\n                       startGame={this.startGame}\r\n                    />\r\n                    <div className={classes.controls}>\r\n                        <i className=\"fa fa-arrow-left\" onTouchStart={() => this.setDirection(37)}></i>\r\n                        <i className=\"fa fa-arrow-up\" onTouchStart={() => this.setDirection(38)}></i>\r\n                        <i className=\"fa fa-arrow-right\" onTouchStart={() => this.setDirection(39)}></i>\r\n                        <i className=\"fa fa-arrow-down\" onTouchStart={() => this.setDirection(40)}></i>\r\n                    </div>\r\n                    </>\r\n                     : <FinishGame game={\"Snake\"} startNew={this.startGame} score={this.state.score} />\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  Snake\r\n","import React from 'react'\r\nimport classes from './Navigation.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Navigation = props => {\r\n    return (\r\n        <div className={classes.Navigation}>\r\n          <li> <Link to={props.url} style={{ textDecoration: 'none' }}>{props.children}</Link></li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport classes from './GameList.css'\r\n\r\nimport Navigation from '../../components/Navigation/Navigation'\r\n\r\nconst Gamelist = () => {\r\n    return (\r\n        <div className={classes.GameList}>\r\n            <Navigation url=\"/memory-game\" >Memory Card Game</Navigation>\r\n            <Navigation url=\"/snake-game\" >Snake Game</Navigation> \r\n            <Navigation url=\"/minesweeper\" >Minesweeper</Navigation> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gamelist\r\n","import React from 'react'\r\nimport classes from './Menu.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className={classes.Menu}>\r\n        <ul>\r\n        <Link to={\"/\"}><li>GAMES</li></Link>\r\n        <Link to={{pathname: \"/stats\", state: {game: 'Memory_Game'}}}><li>STATS</li></Link>\r\n        <Link to={\"/about\"}><li>ABOUT US</li></Link>\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport classes from './Cell.css'\r\n\r\nconst Cell = ({ cell, onToggleMarked, onClick, isFinished }) => {\r\n\r\n    const clazz =[ 'fa'] \r\n    let content = null\r\n    let style = {color: ''} \r\n\r\n    if(cell.open){\r\n          style = !cell.epicenter ? {backgroundColor: '#ccc'}:{backgroundColor: 'red'}\r\n    }\r\n\r\n    if(cell.isMine && cell.open && !cell.marked){\r\n        clazz.push('fa-bomb')\r\n    }\r\n\r\n    if(cell.value > 0 && cell.open ){\r\n        content = cell.value\r\n    }\r\n\r\n    if(cell.marked && !cell.open){\r\n        clazz.push('fa-flag')\r\n    }\r\n\r\n    if(isFinished && cell.marked && !cell.isMine){\r\n        clazz.splice(1,1)\r\n        clazz.push('fa-times')\r\n    }\r\n  \r\n    if( cell.value>0 && cell.open){\r\n        switch(cell.value){\r\n            case 1:\r\n                style.color = 'blue'\r\n            break;\r\n            case 2:\r\n                style.color = 'green'\r\n            break;\r\n            case 3:\r\n                style.color = 'red'\r\n            break;\r\n            case 4:\r\n                style.color ='darkblue'\r\n            break;\r\n            case 5:\r\n                style.color = 'maroon'\r\n            break;\r\n            case 6:\r\n                style.color = '#009D9D'\r\n            break;\r\n            case 7:\r\n                style.color = 'black'\r\n            break;\r\n            case 8:\r\n                style.color = '#6b6b6b'\r\n            break;\r\n            default:\r\n        }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className={classes.Cell }\r\n             onContextMenu={ (e)=>onToggleMarked(cell.id, e)}\r\n             onClick={!isFinished?(e)=>onClick(cell.id, e):null}\r\n             style={style}\r\n             >\r\n            {!cell.marked && !cell.isMine ? content : <i className={ clazz.join(' ') }  \r\n                style={ cell.marked ? {color: 'red'} : {color: 'black'} } ></i> }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cell\r\n","import React from 'react'\r\nimport classes from './MineField.css'\r\nimport Cell from '../Cell/Cell'\r\nimport Timer from '../../../../components/Timer/Timer'\r\nimport Button from '../../../../components/UI/Button/Button'\r\n\r\nconst MineField = ({cells, \r\n                    onToggleMarked, \r\n                    onClick, \r\n                    stopTimer, \r\n                    handleTime, \r\n                    started, \r\n                    startGame, \r\n                    isFinished,\r\n                    win,\r\n                    flaggedCount,\r\n                    mineCount,\r\n                    saveResults}) => {\r\n\r\n    let field = null\r\n    let header = null\r\n\r\n    if (!started){\r\n            field = <Button onClick={ startGame }>Start</Button>\r\n        } else{\r\n        field = cells.map((cell, index) => { \r\n            return <Cell key={index} \r\n                         cell={ cell } \r\n                         isFinished={isFinished}\r\n                         onToggleMarked={ onToggleMarked } \r\n                         onClick={onClick}\r\n                         /> \r\n            })\r\n    }\r\n\r\n    if(!stopTimer){\r\n    header = <><Timer handleTime={ handleTime }/><div className={classes.Flags}>{mineCount - flaggedCount}</div></>\r\n    }\r\n    if(isFinished && !win){\r\n        header = <>Boom! You Lost! <Button onClick={ startGame }>Start New?</Button> </>\r\n    }\r\n    if(win){\r\n        header = <>Yay! You Win! <Button onClick={ startGame }>Start New?</Button> <Button onClick={ saveResults }>Save Results</Button></>\r\n    }\r\n    return (\r\n        <>\r\n            <div className={classes.TimerDiv}>\r\n               {header}\r\n            </div>\r\n\r\n            <div className={classes.MineField}>\r\n                { field }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MineField\r\n","import React, { Component } from 'react'\r\nimport classes from './Minesweeper.css'\r\nimport MineField from './MineField/MineField'\r\nimport FinishGame from '../../../components/FinishGame/FinishGame'\r\n\r\nclass Minesweeper extends Component {\r\n\r\n    cellCount = 384\r\n    mineCount = 75\r\n    style='{bacgroundColor: \"red\"}'\r\n\r\n    generateCells = (length) => {\r\n        let id = 0\r\n        let x = 0\r\n        let y = 1\r\n        const cellArr = []\r\n       \r\n        for(let i=0; i<length; i++){\r\n \r\n            if ( x < 24 ){ x++ }\r\n                else { y++; x=1 }\r\n\r\n            cellArr.push({ cordinates: [x,y], isMine: false, open: false, value: 0,  id: id++, marked: false })\r\n        }\r\n        return cellArr\r\n    }\r\n\r\n    state={\r\n        time: null,\r\n        cellArr: this.generateCells(this.cellCount),\r\n        started: false,\r\n        stopTimer: true,\r\n        isFinished: false,\r\n        saveResults: false,\r\n        flaggedCount: 0,\r\n        win: false\r\n    }\r\n\r\n    startGame = () => {\r\n        this.setState({  \r\n        time: null,\r\n        cellArr: this.generateCells(this.cellCount),\r\n        started: true,\r\n        stopTimer: true,\r\n        isFinished: false,\r\n        saveResults: false,\r\n        win: false,\r\n        flaggedCount: 0\r\n     })\r\n    }\r\n\r\n    saveResults = () => {\r\n        this.setState({saveResults: true})\r\n    }\r\n\r\n    onGameWin = ()=>{\r\n        const cells = JSON.parse(JSON.stringify(this.state.cellArr))\r\n        const openned = cells.filter(el=>el.open===true).length\r\n        const wrongFlags = cells.filter(el=>el.marked && !el.isMine).length\r\n\r\n        if(openned===(this.cellCount-this.mineCount) && wrongFlags===0){\r\n            this.setState({win: true})\r\n        }\r\n\r\n    }\r\n\r\n    onClick = (id, e) => {\r\n        let cells = JSON.parse(JSON.stringify(this.state.cellArr))\r\n        const idx = cells.findIndex(el=> el.id === id)\r\n        let counter = JSON.parse(JSON.stringify(this.state.flaggedCount))\r\n        const cell = cells[idx]\r\n\r\n        if(this.state.stopTimer && !cell.marked){\r\n            cells=this.generateMines(cell, cells)\r\n            this.setState({ stopTimer: false })\r\n        } \r\n        if(cell.value===0 && !cell.marked){\r\n            this.revealEmpty(idx, cells)\r\n        }\r\n        if(cell.value>0 && !cell.marked){\r\n            this.openCell(idx, cells)\r\n        }\r\n\r\n        if(cell.isMine && !cell.marked){\r\n           this.gameOver(cells)\r\n           cell.epicenter = true\r\n           this.setState({ isFinished: true })\r\n        }\r\n\r\n        this.setState({ cellArr: cells }, () => {\r\n            if(counter===this.mineCount){\r\n                this.onGameWin()\r\n            }\r\n        })\r\n    }\r\n\r\n    gameOver = (cells) => {\r\n        cells.forEach(cell => cell.isMine === true && !cell.marked ? cell.open=true : cell)\r\n        return cells\r\n    }\r\n\r\n    openCell = (idx, cells) => {\r\n        cells[idx].open = true\r\n    }\r\n\r\n    revealEmpty = (idx, cells) => {\r\n        let area = this.getNeighbours(idx, cells);\r\n\r\n        area.forEach(value => {\r\n            if (!value.marked && !value.open && !value.isMine) {\r\n                const idx = cells.findIndex(cell => cell.id === value.id)\r\n                cells[idx].open = true;\r\n            if (value.value === 0) {\r\n                 this.revealEmpty(idx, cells);\r\n            }\r\n        }})\r\n    }\r\n\r\n    getNeighbours = (idx, cells)=>{\r\n        const neighbourCells = []\r\n        const x = cells[idx].cordinates[0]\r\n        const y = cells[idx].cordinates[1]\r\n        let cellIdx\r\n\r\n       \r\n        cellIdx = cells.findIndex(el => el.cordinates[0] === x && el.cordinates[1] === y)\r\n        neighbourCells.push(cells[cellIdx])\r\n   \r\n        if( x>1 && y>1 ){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x-1 && el.cordinates[1] === y-1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if( y>1 ){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x && el.cordinates[1] === y-1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if( x<24 && y>1 ){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x+1 && el.cordinates[1] === y-1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if( x>1 ){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x-1 && el.cordinates[1] === y)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if(x<24){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x+1 && el.cordinates[1] === y)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if(x>1 && y<16){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x-1 && el.cordinates[1] === y+1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if(y<16){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x && el.cordinates[1] === y+1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if(x<24 && y<16){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x+1 && el.cordinates[1] === y+1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n\r\n        return neighbourCells\r\n    }\r\n\r\n    generateMines = (cell, cells) => {\r\n        const mineArr = []\r\n        let counter = 0\r\n\r\n        while(counter<this.mineCount){\r\n            const idx = Math.round(Math.random()*(this.cellCount-1))    \r\n            if( cells[idx].id === cell.id || cells[idx].isMine ){\r\n               continue\r\n            }\r\n            cells[idx].isMine = true\r\n            cells[idx].value = -1\r\n            mineArr.push(cells[idx])\r\n            counter++\r\n        }\r\n         mineArr.forEach(mine => {this.setNumbers(mine, cells)}) \r\n        return cells\r\n    }\r\n\r\n    setNumbers = (mine, cells) => {\r\n       \r\n        let x = mine.cordinates[0]\r\n        let y = mine.cordinates[1]\r\n        let idx\r\n            \r\n            if( x>1 && y>1 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x-1 && cell.cordinates[1] === y-1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( y>1 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x && cell.cordinates[1] === y-1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( x<24 && y>1 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x+1 && cell.cordinates[1] === y-1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( x>1 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x-1 && cell.cordinates[1] === y)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( x<24 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x+1 && cell.cordinates[1] === y)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            \r\n            if( x>1 && y<16 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x-1 && cell.cordinates[1] === y+1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( y<16 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x && cell.cordinates[1] === y+1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( x<24 && y<16 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x+1 && cell.cordinates[1] === y+1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n    }\r\n    \r\n    onToggleMarked = (id, e) => {\r\n        e.preventDefault()\r\n        const cells = JSON.parse(JSON.stringify(this.state.cellArr))\r\n        const idx = cells.findIndex(el => el.id === id)\r\n        let counter = JSON.parse(JSON.stringify(this.state.flaggedCount))\r\n        \r\n        if(!cells[idx].open && !this.state.isFinished){\r\n           cells[idx].marked = !cells[idx].marked\r\n           if(cells[idx].marked){\r\n            counter++\r\n           }else{\r\n            counter--\r\n           }\r\n\r\n           if(counter===this.mineCount){\r\n               this.onGameWin()\r\n           }\r\n        }\r\n        this.setState({ cellArr: cells, flaggedCount: counter })  \r\n    }\r\n\r\n    handleTime = (time) => {\r\n            this.setState({ time })\r\n        }\r\n\r\n    render() {  \r\n        const {cellArr, stopTimer, isFinished, started, win, flaggedCount, saveResults }=this.state\r\n        return (\r\n            <div className={classes.Minesweeper}>\r\n                {saveResults ? <FinishGame game={\"Minesweeper\"} startNew={this.startGame} time={this.state.time} />\r\n                     : <MineField \r\n                        mineCount={this.mineCount}\r\n                        saveResults={this.saveResults}\r\n                        win={win}\r\n                        isFinished={isFinished}\r\n                        started={ started }\r\n                        startGame={this.startGame}\r\n                        stopTimer={ stopTimer }\r\n                        cells={ cellArr } \r\n                        onToggleMarked={ this.onToggleMarked } \r\n                        onClick={ this.onClick }\r\n                        handleTime={this.handleTime}\r\n                        flaggedCount={flaggedCount}\r\n                    />\r\n                }\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Minesweeper\r\n","import React from 'react';\nimport withLayout from './hoc/Layout/Layout';\n\nfunction App() {\n  return (  \n    <>\n    </>\n  )\n}\n\nexport default withLayout(App);\n","import React, { Component } from 'react'\r\nimport classes from './Layout.css'\r\nimport Drawer from '../../components/Drawer/Drawer'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport  Stats  from '../../components/Stats/Stats';\r\nimport MemoryGame from '../../containers/Games/MemoryGame/MemoryGame'\r\nimport Snake from '../../containers/Games/Snake/Snake';\r\nimport Gamelist from '../../containers/GameList/Gamelist';\r\nimport Menu from '../../components/Menu/Menu';\r\nimport Minesweeper from '../../containers/Games/Minesweeper/Minesweeper';\r\nimport FinishGame from '../../components/FinishGame/FinishGame';\r\n\r\n\r\nconst withLayout = (WrappedComponent) => {\r\n    class Layout extends Component{\r\n        state={\r\n            isOpen: false\r\n        }\r\n\r\n        toggleDrawer = () => {\r\n            this.setState(({ isOpen }) => {\r\n               return { isOpen: !isOpen }\r\n            })\r\n        }\r\n        render() {\r\n            return (      \r\n                <div className={classes.Layout}>\r\n                    <WrappedComponent />\r\n                    <Router>\r\n                        <Menu />\r\n                        <Drawer \r\n                         isOpen={this.state.isOpen}\r\n                         toggleDrawer={this.toggleDrawer}\r\n                        />   \r\n                        <Switch>\r\n                          <Route path=\"/\" exact component={Gamelist} />\r\n                          <Route path=\"/stats\" component={Stats} />\r\n                          <Route path=\"/finish\" exact component={FinishGame} /> \r\n                          <Route path=\"/snake-game\" exact component={Snake} />\r\n                          <Route path=\"/memory-game\" exact component={MemoryGame} /> \r\n                          <Route path=\"/minesweeper\" exact component={Minesweeper} /> \r\n                        </Switch>\r\n                    </Router>\r\n                </div>            \r\n            )\r\n        }\r\n    }\r\n    return Layout   \r\n}\r\n\r\nexport default withLayout\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classes from './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n  \nconst app = <div className ={classes.Index}><App /></div>\n\nReactDOM.render( app, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}