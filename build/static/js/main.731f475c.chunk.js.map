{"version":3,"sources":["components/Drawer/Drawer.css","containers/Games/Snake/GameArea/GameArea.css","containers/Games/MemoryGame/Card/Card.css","containers/Games/Minesweeper/MineField/MineField.css","components/UI/Tab/Tab.css","components/UI/Loader/Loader.css","components/FinishGame/FinishGame.css","containers/Games/Snake/Snake.css","containers/Games/MemoryGame/Dashboard/Dashboard.css","index.css","hoc/Layout/Layout.css","components/Menu/Menu.css","components/UI/BackDrop/BackDrop.css","containers/GameList/GameList.css","components/Navigation/Navigation.css","components/Stats/Stats.css","components/Stats/LeaderboardRenderer/LeaderboardRenderer.css","components/Stats/StatList/StatsList.css","components/Stats/ListItem/ListItem.css","components/UI/Input/Input.css","components/UI/Button/Button.css","containers/Games/Snake/Target.css","containers/Games/Snake/SnakeDot.css","components/Header/Header.css","containers/Games/MemoryGame/MemoryGame.css","components/Timer/Timer.css","containers/Games/Minesweeper/Minesweeper.css","containers/Games/Minesweeper/Cell/Cell.css","components/UI/BackDrop/BackDrop.js","components/Drawer/Drawer.js","Services/API/APIService.js","Services/DataOganizerServices/DataOganizerServices.js","components/UI/Tab/Tab.js","components/UI/Loader/Loader.js","components/Stats/ListItem/ListItem.js","components/Stats/StatList/StatsList.js","components/Stats/LeaderboardRenderer/LeaderboardRenderer.js","components/Stats/Stats.js","containers/Games/MemoryGame/Card/Card.js","components/Timer/Timer.js","components/UI/Button/Button.js","components/Header/Header.js","containers/Games/MemoryGame/Dashboard/Dashboard.js","Services/InputDataHandelerService/InputDataHandelerService.js","components/UI/Input/Input.js","Auxillary/Validation/Validation.js","components/FinishGame/FinishGame.js","containers/Games/MemoryGame/MemoryGame.js","containers/Games/Snake/SnakeDot.js","containers/Games/Snake/Target.js","containers/Games/Snake/GameArea/GameArea.js","containers/Games/Snake/Snake.js","components/Navigation/Navigation.js","containers/GameList/Gamelist.js","components/Menu/Menu.js","containers/Games/Minesweeper/Cell/Cell.js","containers/Games/Minesweeper/MineField/MineField.js","containers/Games/Minesweeper/Minesweeper.js","App.js","hoc/Layout/Layout.js","serviceWorker.js","index.js"],"names":["module","exports","BackDrop","props","onClick","className","classes","Drawer","cls","clsButton","isOpen","push","open","close","join","toggleDrawer","style","textDecoration","to","APIService","_APIUrlBase","game","axios","get","this","res","data","post","catch","error","console","log","status","StatsOganizerServices","sort","leaders","isNaN","result","a","b","Number","replace","transformData","keys","Object","map","key","person","Tab","activeTab","name","active","children","Loader","loader","ldsring","ListItem","player","firstName","lastName","StatsList","leaderboard","index","LeaderboardRenderer","loading","switchTab","TabsDiv","Stats","location","state","Organizer","tubName","setState","getData","handleResponse","then","Component","Card","cardState","img","cardFlip","id","interval","Timer","timer","date","Date","setTimer","differece","currentMins","getMinutes","currentSec","getSeconds","setInterval","handleTime","clearInterval","Button","disabled","Header","content","end","text","saveResults","disableSave","startGame","Dashboard","start","cardList","card","isFinished","stopTimer","Content","InputDataHandelerService","inputHandler","value","trim","Input","htmlFor","type","onChange","Validation","isValid","length","match","FinishGame","InputHandler","showStats","personInfoHandler","e","window","event","score","time","target","Validate","sendData","undefined","pathname","inputs","startNew","MemoryGame","counter","turn","cardCount","generateCards","cards","imgNum","i","activeCards","cardContent","cardFlipHandler","cardId","forEach","checkMatching","Math","random","timeout","setTimeout","flipBackHandler","clearTimeout","finishGame","SnakeDot","cordinates","cordinate","left","top","Target","backgroundColor","GameArea","targetCords","Score","tick","Snake","getTargetCords","round","speed","direction","onKeyDown","document","onkeydown","setDirection","keyCode","checkArea","snakeHead","checkSelfHit","snakeCords","pop","cord","checkTargetHit","gameOver","shift","controls","onTouchStart","Navigation","url","Gamelist","GameList","Menu","Cell","cell","onToggleMarked","clazz","color","epicenter","isMine","marked","splice","onContextMenu","MineField","cells","started","win","flaggedCount","mineCount","rows","cols","styleContent","width","height","styleBoard","header","Flags","Minesweeper","cellCount","floor","generateCells","x","y","cellArr","onGameWin","JSON","parse","stringify","openned","filter","el","wrongFlags","idx","findIndex","generateMines","revealEmpty","openCell","getNeighbours","cellIdx","neighbourCells","mineArr","mine","setNumbers","preventDefault","withLayout","WrappedComponent","Layout","path","exact","component","Boolean","hostname","app","Index","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.731f475c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer__Drawer___3vVJZ\",\"open\":\"Drawer__open___XzWAV\",\"close\":\"Drawer__close___3Ddcc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameArea\":\"GameArea__GameArea___1giao\",\"Content\":\"GameArea__Content___4kaKX\",\"Score\":\"GameArea__Score___1D7VO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card__Card___1hLlG\",\"Back\":\"Card__Back___1npfg\",\"Front\":\"Card__Front___9n4gs\",\"img_1\":\"Card__img_1____dj2Q\",\"img_2\":\"Card__img_2___W4W5o\",\"img_3\":\"Card__img_3___PLeoc\",\"img_4\":\"Card__img_4___2OFpm\",\"img_5\":\"Card__img_5___7p706\",\"img_6\":\"Card__img_6___KFOV0\",\"img_7\":\"Card__img_7___3aiXz\",\"img_8\":\"Card__img_8___2xjld\",\"img_9\":\"Card__img_9___3j_B_\",\"img_10\":\"Card__img_10___3hRjl\",\"img_11\":\"Card__img_11___2FFoi\",\"img_12\":\"Card__img_12___2Ociu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MineField\":\"MineField__MineField___2ltSN\",\"Content\":\"MineField__Content___12a-V\",\"TimerDiv\":\"MineField__TimerDiv___243WH\",\"Flags\":\"MineField__Flags___1c8xe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Tab\":\"Tab__Tab___14e1b\",\"active\":\"Tab__active___1lvsB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Loader__loader___3eqKX\",\"ldsring\":\"Loader__ldsring___FVzqB\",\"lds-ring\":\"Loader__lds-ring___1-K7Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishGame\":\"FinishGame__FinishGame___1DOLG\",\"inputs\":\"FinishGame__inputs___2nA1x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Snake\":\"Snake__Snake___1TMtE\",\"controls\":\"Snake__controls___2I5gs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dashboard\":\"Dashboard__Dashboard___2kqn7\",\"Content\":\"Dashboard__Content___2kUz6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Index\":\"index__Index___2BZWd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout__Layout___2C2_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Menu__Menu___l3EzY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop__BackDrop___wZny4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameList\":\"GameList__GameList___1QyfV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Navigation\":\"Navigation__Navigation___2telG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Stats\":\"Stats__Stats___F33My\",\"ButtonDiv\":\"Stats__ButtonDiv___1hyFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TabsDiv\":\"LeaderboardRenderer__TabsDiv___1uBVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"StatsList\":\"StatsList__StatsList___1oElK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"ListItem__ListItem___3TNW4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input__Input___s67N0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button___QI7b2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Target\":\"Target__Target___cetQA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SnakeDot\":\"SnakeDot__SnakeDot___3Uuil\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header__Header___oE2FH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MemoryGame\":\"MemoryGame__MemoryGame___3tkag\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timer\":\"Timer__Timer___vJ6dw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Minesweeper\":\"Minesweeper__Minesweeper___INENJ\",\"MemoryGame\":\"Minesweeper__MemoryGame___2sIbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Cell\":\"Cell__Cell___dKMvy\"};","import React from 'react'\r\nimport classes from './BackDrop.css'\r\n\r\nconst BackDrop = props => {\r\n    return (\r\n        <div\r\n        onClick={props.onClick}\r\n        className={classes.BackDrop}\r\n        >       \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BackDrop\r\n","import React from 'react'\r\nimport classes from './Drawer.css'\r\nimport BackDrop from '../UI/BackDrop/BackDrop'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Drawer = props => {\r\n   const cls = [classes.Drawer]\r\n   const clsButton = ['fa']\r\n    if(props.isOpen){\r\n         clsButton.push('fa-times')\r\n         cls.push(classes.open)\r\n        }else {\r\n             clsButton.push('fa-bars')\r\n             cls.push(classes.close)\r\n            }\r\n    return (\r\n            <>\r\n                <div className={cls.join(' ')}>\r\n                    <i onClick={props.toggleDrawer} className={clsButton.join(' ')}></i>\r\n                    <ul onClick={props.toggleDrawer}>\r\n                        <Link style={{ textDecoration: 'none' }}\r\n                              to={\"/\"}\r\n                        >\r\n                            <li>Games</li>\r\n                        </Link>\r\n\r\n                        <Link style={{ textDecoration: 'none' }}\r\n                               to={\"/stats\"}\r\n                        >\r\n                            <li>Statistics</li>\r\n                        </Link>\r\n                    </ul>\r\n                </div>\r\n              {props.isOpen ? <BackDrop  onClick={props.toggleDrawer}/> : null}\r\n            </>\r\n    )\r\n}\r\n\r\nexport default Drawer\r\n","import axios from 'axios'\r\n\r\nexport default class APIService  {\r\n\r\n    _APIUrlBase = 'https://fun-games-46704.firebaseio.com'\r\n\r\n    async getData (game) { \r\n        const res = await axios.get(`${this._APIUrlBase}/${game}.json`)      \r\n                     return await res.data            \r\n                }\r\n               \r\n\r\n    async sendData (game, data) {  \r\n        const res = await axios.post(`${this._APIUrlBase}/${game}.json`, data)\r\n        .catch(error => {\r\n            console.log(error)\r\n            })\r\n\r\n        if(res.status === 200){\r\n            return true\r\n        }else{\r\n            return false\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","export default class StatsOganizerServices {\r\n    \r\n    sort = leaders => {\r\n        if(isNaN(leaders[0].result)){\r\n            leaders.sort((a,b) => {\r\n                return  Number(a.result.replace(/:/g,'')) - Number(b.result.replace(/:/g,''))\r\n              })\r\n        }else {\r\n            leaders.sort((a,b) => {\r\n                return   b.result - a.result \r\n              })\r\n        }\r\n    }\r\n\r\n    transformData = data => {\r\n        const keys = Object.keys(data)\r\n        const leaders = []\r\n        if(data) {                \r\n           keys.map(key => {\r\n                const person = data[key]                  \r\n                return leaders.push(person)                   \r\n            })\r\n        }\r\n\r\n      return leaders\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport classes from './Tab.css'\r\n\r\nconst Tab = props => {\r\n    const cls = [classes.Tab]\r\n    if(props.activeTab === props.name){   \r\n            cls.push(classes.active)\r\n    }\r\n\r\n    return (   \r\n        <div  className={cls.join(' ')} onClick={props.onClick} >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tab\r\n","import React from 'react'\r\nimport classes from './Loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className={classes.loader}>\r\n            <div className={classes.ldsring}>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport classes from './ListItem.css'\r\n\r\nconst ListItem = ({ player }) => {\r\n    return (\r\n        <li className={classes.ListItem}> \r\n            { player.firstName + ' ' + player.lastName }\r\n            <strong>{ player.result }</strong>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListItem\r\n","import React from 'react'\r\nimport classes from './StatsList.css'\r\nimport ListItem from '../ListItem/ListItem'\r\n\r\nconst StatsList = ({ leaderboard }) => {\r\n\r\n    return (\r\n        <ol className={classes.StatsList}>\r\n           { leaderboard.map((player, index) => {\r\n               return(\r\n                <ListItem  key={index}  player={player} />\r\n               )\r\n           })}\r\n        </ol>     \r\n    )\r\n}\r\n\r\nexport default StatsList\r\n","import React from 'react'\r\nimport classes from './LeaderboardRenderer.css'\r\n\r\nimport Tab from '../../UI/Tab/Tab'\r\nimport Loader from '../../UI/Loader/Loader'\r\nimport StatsList from '../StatList/StatsList'\r\n\r\nconst LeaderboardRenderer = ({loading, leaderboard, activeTab, switchTab}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className={classes.TabsDiv}>\r\n                <Tab onClick={() => switchTab(\"Memory_Game\")} name=\"Memory_Game\" activeTab={activeTab}>Memory Game</Tab> \r\n                <Tab onClick={() => switchTab(\"Snake\")} name=\"Snake\" activeTab={activeTab}>Snake Game</Tab>\r\n                <Tab onClick={() => switchTab(\"Minesweeper\")} name=\"Minesweeper\" activeTab={activeTab}>Minesweeper</Tab>     \r\n            </div>\r\n            { loading ? <Loader /> : <StatsList  leaderboard={ leaderboard } /> }        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default LeaderboardRenderer\r\n","import React, { Component } from 'react'\r\nimport classes from './Stats.css'\r\nimport APIService  from '../../Services/API/APIService' \r\nimport Organizer from '../../Services/DataOganizerServices/DataOganizerServices'\r\n\r\nimport LeaderboardRenderer from './LeaderboardRenderer/LeaderboardRenderer'\r\n\r\nexport class Stats extends Component {\r\n\r\n    game = this.props.location.state ? this.props.location.state.game : \"Memory_Game\"\r\n    \r\n    APIService = new APIService()\r\n    Organizer = new Organizer()\r\n    \r\n    state={\r\n        loading: true,\r\n        leaderboard: [],\r\n        activeTab: this.game,\r\n    }\r\n\r\n    componentDidMount(){ \r\n        this.getData(this.state.activeTab)  \r\n    }\r\n\r\n    switchTab = (tubName) => { \r\n        this.setState({ activeTab: tubName }, () => {\r\n            this.getData(this.state.activeTab)   \r\n        })\r\n    }\r\n\r\n    getData(game){ \r\n        this.APIService.getData(game).then(res=>{\r\n            this.handleResponse(res)\r\n            }   \r\n        )       \r\n    }\r\n    \r\n    handleResponse = data => {\r\n        if(!data){\r\n            this.setState({loading: true})\r\n        }else{\r\n            const leaders = this.Organizer.transformData(data)\r\n            this.Organizer.sort(leaders)\r\n            this.setState({\r\n                loading: false,\r\n                leaderboard: leaders\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    render() { \r\n         const { leaderboard, loading,  activeTab } = this.state\r\n        return (\r\n            <div className={classes.Stats}>\r\n                <h1>Leaderboard</h1>\r\n                <LeaderboardRenderer leaderboard={ leaderboard } \r\n                                     loading={loading} \r\n                                     switchTab={this.switchTab} \r\n                                     activeTab={activeTab}\r\n                />             \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stats\r\n","import React from 'react'\r\nimport classes from './Card.css'\r\n\r\nconst Card = props => {\r\n    const cls = [classes.Card, classes[props.cardState]]\r\n    if(props.cardState === 'Front'){\r\n        cls.push(classes[props.img])\r\n    }  \r\n\r\n    return (\r\n        <div \r\n        className={cls.join(' ')}\r\n        onClick={()=>props.cardFlip(props.id)}\r\n        >     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import classes from './Timer.css'\r\nimport React, { Component } from 'react'\r\n\r\nlet interval = null\r\n\r\nclass Timer extends Component {\r\n        state = {\r\n            timer: '00:00'\r\n        }\r\n\r\n        date = new Date()\r\n\r\n    setTimer = () =>{\r\n        const currentDate = new Date()\r\n        const differece = currentDate - this.date\r\n        let currentMins = new Date(differece).getMinutes()\r\n        let currentSec = new Date(differece).getSeconds()\r\n        if(currentMins < 10) { \r\n            currentMins = '0' + currentMins\r\n        }\r\n        if(currentSec<10) { \r\n            currentSec = '0' + currentSec \r\n        }\r\n        this.setState({\r\n            timer: currentMins + \":\" + currentSec\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Timer}>   \r\n               Time: {this.state.timer}\r\n            </div>\r\n        )\r\n    } \r\n    componentDidMount() {\r\n        interval = setInterval(() => {\r\n            this.setTimer()\r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount () {\r\n        this.props.handleTime(this.state.timer)\r\n        clearInterval(interval)\r\n    }\r\n}\r\n\r\nexport default Timer\r\n","import React from 'react'\r\nimport classes from './Button.css'\r\n\r\nconst Button = props => {\r\n    return (\r\n            <button className={classes.Button}\r\n             onClick={props.onClick}\r\n             disabled = {props.disabled} \r\n            >\r\n                {props.children}\r\n            </button>\r\n    )\r\n}\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport classes from './Header.css'\r\nimport Button from '../UI/Button/Button'\r\n\r\nconst Header = props => {\r\n    let content = null\r\n    \r\n    if(props.end){\r\n        content  =  (<>\r\n                        {props.text}\r\n                        <Button onClick={props.saveResults} disabled={props.disableSave}>Save?</Button>\r\n                        <Button onClick={props.startGame}>New?</Button>\r\n                    </>)\r\n       \r\n    } else {\r\n        content = props.children\r\n    }\r\n\r\n    return ( \r\n        <div className={classes.Header}>\r\n            {content}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport classes from './Dashboard.css'\r\n\r\nimport Card from '../Card/Card'\r\nimport Timer from '../../../../components/Timer/Timer'\r\nimport Button from '../../../../components/UI/Button/Button'\r\nimport Header from '../../../../components/Header/Header'\r\n\r\nconst Dashboard = props => {\r\n    let content = null\r\n    if (!props.start){\r\n        content = <Button onClick={props.startGame}>Start</Button>\r\n        } else{   \r\n             content = props.cardList.map(card =>{ \r\n                        return <Card \r\n                        key={card.id}\r\n                        cardFlip={props.cardFlip}\r\n                        { ...card }\r\n                        />\r\n                    })\r\n            }   \r\n\r\n    return (\r\n            <div className={classes.Dashboard}>\r\n                <Header text=\"Game Over\" end={props.isFinished} start={props.start} startGame={props.startGame} saveResults={ props.saveResults}> \r\n                    { !props.stopTimer ? <Timer handleTime={props.handleTime}/> : null } \r\n                </Header>\r\n                <div className={classes.Content}>\r\n                    { content }\r\n                </div>  \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n\r\n","export default class InputDataHandelerService {\r\n\r\n    inputHandler = (name, value, result, data) => {\r\n        data.result = result\r\n        if(name === 'First Name:'){\r\n            data.firstName = value.trim()\r\n           }\r\n           if(name ==='Last Name:'){\r\n            data.lastName = value.trim()\r\n           }\r\n\r\n           return data\r\n    }\r\n   \r\n}","import React from 'react'\r\nimport classes from './Input.css'\r\n\r\nconst Input = props => {\r\n\r\n    return (\r\n        <>\r\n            <label htmlFor={props.name} >{props.name}</label>\r\n            <input className={classes.Input} name={props.name} \r\n                   type =\"text\" onChange={props.onChange}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","export default function Validation(firstName, lastName) {\r\n\r\n    let isValid = true\r\n \r\n    if(!firstName  || !lastName){\r\n        isValid = false\r\n    }\r\n\r\n    if(lastName.length < 2 || firstName.length < 2){\r\n        isValid = false\r\n    }\r\n\r\n     if(!lastName.match(/^[a-zA-Z]+$/) || !firstName.match(/^[a-zA-Z]+$/)) {\r\n         isValid = false\r\n     }\r\n\r\n    return isValid\r\n}","import React, { Component } from 'react'\r\nimport classes from './FinishGame.css'\r\nimport APIService  from '../../Services/API/APIService' \r\nimport InputHandler from '../../Services/InputDataHandelerService/InputDataHandelerService'\r\n\r\nimport Button from '../UI/Button/Button'\r\nimport Input from '../UI/Input/Input'\r\n\r\nimport Validate from '../../Auxillary/Validation/Validation'\r\nimport { Redirect } from 'react-router'\r\n\r\nclass FinishGame extends Component  {\r\n\r\n    APIService = new APIService()\r\n    InputHandler = new InputHandler()\r\n\r\n        state = {\r\n            data: {\r\n                firstName: '',\r\n                lastName: '',\r\n                result: ''\r\n            },\r\n            showStats: false,\r\n            isValid: false\r\n        }\r\n     \r\n    personInfoHandler = (e) => {\r\n        e = e || window.event \r\n\r\n         const data = {...this.state.data}\r\n         const result = this.props.score || this.props.time\r\n\r\n         this.InputHandler.inputHandler(e.target.name, e.target.value, result, data)\r\n        \r\n        let isValid = Validate(data.firstName, data.lastName)\r\n        this.setState({ data, isValid })\r\n    }\r\n  \r\n    sendData = () => {  \r\n        const game = this.props.game \r\n        this.APIService.sendData(game, this.state.data).then(res=>{\r\n            this.setState({showStats: res})\r\n        })       \r\n    }\r\n\r\n    render(){\r\n        const result = this.props.time || this.props.score\r\n\r\n        if(result === undefined){\r\n            return <Redirect to=\"/\" /> \r\n        }\r\n\r\n        if(this.state.showStats){\r\n            return <Redirect to={{ pathname: \"/stats/\", state: {game: this.props.game} }} /> \r\n        }\r\n\r\n        return (\r\n            <> \r\n                <div className={classes.FinishGame}>\r\n                    <h1>Game Over!</h1>\r\n                    <h2>Your result is \r\n                        <strong>{ result }</strong>{this.props.time ? ' s!' : ' pts!'}\r\n                    </h2>\r\n                    <div className={classes.inputs}>\r\n                        <Input name=\"First Name:\"  onChange={this.personInfoHandler}  />\r\n                        <Input name=\"Last Name:\" onChange={this.personInfoHandler} />\r\n                        <div>\r\n                            <Button onClick={this.props.startNew}>New Game</Button>\r\n                            <Button onClick={this.sendData} disabled={!this.state.isValid}>Save Results</Button>\r\n                        </div>\r\n                    </div>\r\n                </div>) \r\n            </>\r\n    )}\r\n    \r\n}\r\n\r\nexport default FinishGame\r\n","import React, { Component } from 'react'\r\nimport classes from './MemoryGame.css'\r\n\r\nimport Dashboard from './Dashboard/Dashboard'\r\nimport FinishGame from '../../../components/FinishGame/FinishGame';\r\n\r\nclass MemoryGame extends Component {\r\n\r\n    counter = 0;\r\n    turn = true\r\n    cardCount = 24\r\n    generateCards =(length)=> {\r\n        const cards = []\r\n        let imgNum = 1\r\n        let id = 1\r\n        for(let i=0; i<length; i++){\r\n            cards.push( {img: `img_${imgNum}`, id: id, cardState: 'Back'})\r\n            id++\r\n            if(i%2===1){ imgNum++}\r\n        }\r\n        return cards\r\n    }\r\n    state={\r\n        time: null,\r\n        activeCards: [],\r\n        start: false,\r\n        stopTimer: true,\r\n        isFinished: false,\r\n        cardContent: this.generateCards(this.cardCount),\r\n        saveResults: false\r\n    }  \r\n\r\n    saveResults = () => {\r\n        this.setState({saveResults: true,   start: false})\r\n    }\r\n\r\n    cardFlipHandler = cardId => { \r\n       const cards = [...this.state.cardContent]\r\n       const activeCards = [...this.state.activeCards]\r\n      \r\n        cards.forEach(card => {\r\n\r\n            if(card.id === cardId && card.cardState === 'Back' && activeCards.length < 2){\r\n                card.cardState = 'Front'\r\n                activeCards.push(card)\r\n             }                \r\n        })\r\n\r\n       this.setState({ cardContent: cards, activeCards })\r\n\r\n        if(activeCards.length === 2 && this.turn){\r\n            this.turn=false\r\n            this.checkMatching(activeCards)\r\n        }\r\n\r\n    }\r\n\r\n    startGame = () => { \r\n        const cards = [...this.state.cardContent].sort(() => Math.random() - 0.5)\r\n        cards.forEach(card => { card.cardState = 'Back'}) \r\n       \r\n            this.setState({\r\n                stopTimer: false,\r\n                isFinished: false,\r\n                cardContent: cards,\r\n                saveResults: false,\r\n                start: true\r\n                })\r\n            \r\n    }\r\n\r\n    checkMatching = activeCards => {\r\n      \r\n        if(activeCards[0].img === activeCards[1].img){         \r\n            this.setState({ activeCards: [] })\r\n            this.counter++\r\n            this.turn=true  \r\n        } else {\r\n         const timeout = window.setTimeout(()=>{\r\n             this.flipBackHandler(activeCards)\r\n             this.turn=true  \r\n             window.clearTimeout(timeout)\r\n        }, 1000)\r\n          }\r\n\r\n        if(this.counter >= this.state.cardContent.length/2){\r\n            this.finishGame()  \r\n           }\r\n    }\r\n    \r\n    flipBackHandler = activeCards => {\r\n        const cards = [...this.state.cardContent]\r\n\r\n        cards.forEach(card => {\r\n            if(card.id === activeCards[0].id || card.id === activeCards[1].id){\r\n                card.cardState = 'Back'\r\n            }\r\n        })\r\n\r\n        this.setState({\r\n            cardContent: cards,\r\n            activeCards: []\r\n        })\r\n    } \r\n\r\n    finishGame = () => {\r\n        this.setState({\r\n            stopTimer: true,\r\n            isFinished: true,\r\n            activeCards: [],\r\n        })  \r\n        this.counter = 0  \r\n    }\r\n\r\n    handleTime = time => {\r\n            this.setState({ time })      \r\n    }\r\n   \r\n    render() {\r\n        return (           \r\n            <div className={classes.MemoryGame}>  \r\n             {this.state.saveResults \r\n             ?  <FinishGame game=\"Memory_Game\" time={this.state.time}  startNew={this.startGame}/>\r\n             :  <Dashboard\r\n                stopTimer={this.state.stopTimer}\r\n                cardList={this.state.cardContent}\r\n                cardFlip={this.cardFlipHandler} \r\n                start={this.state.start}\r\n                startGame={this.startGame}\r\n                handleTime={this.handleTime}\r\n                isFinished={this.state.isFinished}\r\n                saveResults={this.saveResults}\r\n                />\r\n             }                      \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default MemoryGame\r\n","import React from 'react'\r\nimport classes from './SnakeDot.css'\r\n\r\nconst SnakeDot = props => {\r\n    let content = null\r\n    content = props.cordinates.map((cordinate, index) => {\r\n    return  (<div \r\n            key={index}\r\n            style = {{ left: cordinate[0] +'%', top: cordinate[1] + '%'}}\r\n            className={classes.SnakeDot}\r\n            >\r\n            </div>)\r\n    })\r\n\r\n    return (\r\n        <>\r\n       {content}\r\n       </>\r\n    )\r\n}\r\n\r\nexport default SnakeDot\r\n","import React from 'react'\r\nimport classes from './Target.css'\r\n\r\nconst Target = props => {\r\n    const cordinate = props.cordinate\r\n    return (\r\n        <div \r\n        className={classes.Target}\r\n        style = {{backgroundColor: '#fff', left: cordinate[0] +'%', top: cordinate[1] + '%'}}\r\n        >    \r\n        </div>\r\n    )\r\n}\r\nexport default Target\r\n","import React from 'react'\r\nimport classes from './GameArea.css'\r\n\r\nimport SnakeDot from '../SnakeDot'\r\nimport Button from '../../../../components/UI/Button/Button'\r\nimport Target from '../Target'\r\nimport Header from '../../../../components/Header/Header'\r\n\r\n\r\nconst GameArea = props => {\r\n\r\n    let content = null\r\n    if (!props.start){\r\n        content = <Button onClick={props.startGame}>Start</Button>\r\n        } else{\r\n            content = <> \r\n                        <Target cordinate ={props.targetCords} />\r\n                        <SnakeDot cordinates={props.cordinates} />\r\n                      </>\r\n                       \r\n        }\r\n    return (\r\n        <div className={classes.GameArea}>\r\n            <Header text=\"Game Over\" \r\n                   end={props.isFinished}\r\n                   start={props.start} \r\n                   startGame={props.startGame} \r\n                   saveResults={ props.saveResults}>\r\n                 <div className={classes.Score}> {props.start ? `Score - ${props.score}` : null } </div>\r\n            </Header>\r\n            <div className={classes.Content}>\r\n               { content }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameArea\r\n","import React, { Component } from 'react'\r\nimport classes from './Snake.css'\r\n\r\nimport GameArea from './GameArea/GameArea'\r\nimport FinishGame from '../../../components/FinishGame/FinishGame'\r\n\r\nlet interval = null\r\nlet tick = false\r\n\r\nclass Snake extends Component {\r\n\r\n    getTargetCords = () => {\r\n        const x = Math.round(Math.random()*49 )* 2\r\n        const y = Math.round(Math.random()*49 )* 2\r\n        return [x, y]\r\n    }\r\n\r\n    state = {\r\n        start: false,\r\n        isFinished: false,\r\n        saveResults: false,\r\n        score: 0,\r\n        speed: 250,\r\n        direction: 39,\r\n        targetCords: this.getTargetCords(),\r\n        cordinates: [\r\n            [0, 0],\r\n            [2, 0],\r\n        ]\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        document.onkeydown = null\r\n        window.clearInterval(interval)\r\n    }\r\n   \r\n    startGame = () => {\r\n     this.setState({start: true,\r\n                    isFinished: false, \r\n                    score: 0, \r\n                    saveResults: false,\r\n                    speed: 250,\r\n                    direction: 39,\r\n                    cordinates: [\r\n                            [0, 0],\r\n                            [2, 0],\r\n                        ],\r\n        }) \r\n     interval = window.setInterval(this.onKeyDown, this.state.speed)\r\n     document.onkeydown = this.setDirection\r\n    }\r\n\r\n    saveResults = () => {\r\n        this.setState({saveResults: true})\r\n    }\r\n\r\n    setDirection = (e) => {   \r\n        const direction = e.keyCode || e\r\n        if(direction  && tick === true){\r\n\r\n        switch(direction){\r\n            case 37:\r\n            if(this.state.direction !== 39){ this.setState({ direction }) \r\n             }\r\n            break;\r\n            case 38:\r\n            if(this.state.direction !== 40){ this.setState({ direction }) }\r\n            break;\r\n            case 39:\r\n            if(this.state.direction !== 37){ this.setState({ direction }) }\r\n            break;\r\n            case 40:\r\n            if(this.state.direction !== 38){ this.setState({ direction }) }\r\n            break;\r\n            default:\r\n            }     \r\n        }\r\n        tick = false\r\n    }\r\n\r\n    checkArea = snakeHead => {\r\n        if(snakeHead[0] < 0 || snakeHead[1] > 98 || snakeHead[1] < 0 || snakeHead[0] > 98){\r\n            return true\r\n        }else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    checkSelfHit = (snakeHead) => {\r\n        let state = false\r\n        let snakeCords = [...this.state.cordinates]\r\n        snakeCords.pop()\r\n        snakeCords.forEach(cord => {\r\n            if(snakeHead[0] === cord[0] && snakeHead[1] === cord[1]){\r\n                state = true\r\n            }\r\n        })\r\n\r\n       return state\r\n    }\r\n\r\n    checkTargetHit = (snakeHead) => {\r\n        if(snakeHead[0] === this.state.targetCords[0] && snakeHead[1] === this.state.targetCords[1]){\r\n\r\n            let { speed } = this.state\r\n            this.setState(({ score }) => {\r\n                return  { score: score + 100 }\r\n            })\r\n\r\n            if(speed > 30){ \r\n                this.setState(({speed}) => {\r\n                    return { speed: speed - 5 }\r\n                })\r\n            }\r\n\r\n            this.setState({ targetCords: this.getTargetCords() })\r\n            \r\n           window.clearInterval(interval)\r\n           interval = window.setInterval(this.onKeyDown, this.state.speed)\r\n            return true\r\n        }\r\n    }\r\n\r\n    gameOver() {\r\n        this.setState({\r\n            isFinished: true,\r\n        }) \r\n        document.onkeydown = null\r\n    }\r\n\r\n    onKeyDown = () => {  \r\n        let snakeCords = [...this.state.cordinates]\r\n        let snakeHead = snakeCords[snakeCords.length - 1]\r\n\r\n        switch(this.state.direction){\r\n         case 37:\r\n          snakeHead = [snakeHead[0] - 2, snakeHead[1]]\r\n            break;\r\n         case 38:\r\n            snakeHead = [snakeHead[0], snakeHead[1] - 2]\r\n            break;\r\n         case 39:\r\n            snakeHead = [snakeHead[0] + 2, snakeHead[1]]\r\n            break;\r\n         case 40:\r\n            snakeHead = [snakeHead[0], snakeHead[1] + 2]\r\n            break;\r\n            default:\r\n        }\r\n        if(!this.checkArea(snakeHead) && !this.checkSelfHit(snakeHead)){\r\n           if(!this.checkTargetHit(snakeHead)){\r\n            snakeCords.shift()\r\n           }\r\n            snakeCords.push(snakeHead)\r\n            this.setState({ cordinates: snakeCords })\r\n              tick = true\r\n        }else {\r\n            window.clearInterval(interval)\r\n            this.gameOver()\r\n            }\r\n           \r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className={classes.Snake}>\r\n                    {!this.state.saveResults\r\n                    ?<> <GameArea \r\n                       setDirection={this.setDirection}\r\n                       score={this.state.score}\r\n                       cordinates={this.state.cordinates}\r\n                       start={this.state.start}\r\n                       handleTime={this.handleTime}\r\n                       targetCords={this.state.targetCords}\r\n                       startGame={this.startGame}\r\n                       saveResults={this.saveResults}\r\n                       isFinished={this.state.isFinished}\r\n                    />\r\n                    <div className={classes.controls}>\r\n                        <i className=\"fa fa-arrow-left\" onTouchStart={() => this.setDirection(37)}></i>\r\n                        <i className=\"fa fa-arrow-up\" onTouchStart={() => this.setDirection(38)}></i>\r\n                        <i className=\"fa fa-arrow-right\" onTouchStart={() => this.setDirection(39)}></i>\r\n                        <i className=\"fa fa-arrow-down\" onTouchStart={() => this.setDirection(40)}></i>\r\n                    </div>\r\n                    </>\r\n                     : <FinishGame game={\"Snake\"} startNew={this.startGame} score={this.state.score} />\r\n                    }\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default  Snake\r\n","import React from 'react'\r\nimport classes from './Navigation.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Navigation = props => {\r\n    return (\r\n        <div className={classes.Navigation}>\r\n          <li> <Link to={props.url} style={{ textDecoration: 'none' }}>{props.children}</Link></li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation\r\n","import React from 'react'\r\nimport classes from './GameList.css'\r\n\r\nimport Navigation from '../../components/Navigation/Navigation'\r\n\r\nconst Gamelist = () => {\r\n    return (\r\n        <div className={classes.GameList}>\r\n            <Navigation url=\"/memory-game\" >Memory Card Game</Navigation>\r\n            <Navigation url=\"/snake-game\" >Snake Game</Navigation> \r\n            <Navigation url=\"/minesweeper\" >Minesweeper</Navigation> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gamelist\r\n","import React from 'react'\r\nimport classes from './Menu.css'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Menu = () => {\r\n    return (\r\n        <div className={classes.Menu}>\r\n        <ul>\r\n        <Link to={\"/\"}><li>GAMES</li></Link>\r\n        <Link to={{pathname: \"/stats/\", state: {game: 'Memory_Game'}}}><li>STATS</li></Link>\r\n        <Link to={\"/about/\"}><li>ABOUT US</li></Link>\r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport classes from './Cell.css'\r\n\r\nconst Cell = ({ cell, onToggleMarked, onClick, isFinished }) => {\r\n\r\n    const clazz =[ 'fa'] \r\n    let content = null\r\n    let style = {color: ''} \r\n\r\n    if(cell.open){\r\n          style = !cell.epicenter ? {backgroundColor: '#ccc'}:{backgroundColor: 'red'}\r\n    }\r\n\r\n    if(cell.isMine && cell.open && !cell.marked){\r\n        clazz.push('fa-bomb')\r\n    }\r\n\r\n    if(cell.value > 0 && cell.open ){\r\n        content = cell.value\r\n    }\r\n\r\n    if(cell.marked && !cell.open){\r\n        clazz.push('fa-flag')\r\n    }\r\n\r\n    if(isFinished && cell.marked && !cell.isMine){\r\n        clazz.splice(1,1)\r\n        clazz.push('fa-times')\r\n    }\r\n  \r\n    if( cell.value>0 && cell.open){\r\n        switch(cell.value){\r\n            case 1:\r\n                style.color = 'blue'\r\n            break;\r\n            case 2:\r\n                style.color = 'green'\r\n            break;\r\n            case 3:\r\n                style.color = 'red'\r\n            break;\r\n            case 4:\r\n                style.color ='darkblue'\r\n            break;\r\n            case 5:\r\n                style.color = 'maroon'\r\n            break;\r\n            case 6:\r\n                style.color = '#009D9D'\r\n            break;\r\n            case 7:\r\n                style.color = 'black'\r\n            break;\r\n            case 8:\r\n                style.color = '#6b6b6b'\r\n            break;\r\n            default:\r\n        }\r\n    }\r\n    \r\n    \r\n    return (\r\n        <div className={classes.Cell }\r\n             onContextMenu={ (e)=>onToggleMarked(cell.id, e)}\r\n             onClick={!isFinished?(e)=>onClick(cell.id, e):null}\r\n             style={style}\r\n             >\r\n            {!cell.marked && !cell.isMine ? content : <i className={ clazz.join(' ') }  \r\n                style={ cell.marked ? {color: 'red'} : {color: 'black'} } ></i> }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cell\r\n","import React from 'react'\r\nimport classes from './MineField.css'\r\nimport Cell from '../Cell/Cell'\r\nimport Timer from '../../../../components/Timer/Timer'\r\nimport Button from '../../../../components/UI/Button/Button'\r\nimport Header from '../../../../components/Header/Header'\r\n\r\nconst MineField = ({cells, \r\n                    onToggleMarked, \r\n                    onClick, \r\n                    stopTimer, \r\n                    handleTime, \r\n                    started, \r\n                    startGame, \r\n                    isFinished,\r\n                    win,\r\n                    flaggedCount,\r\n                    mineCount,\r\n                    saveResults, \r\n                    rows,\r\n                    cols}) => {\r\n\r\n    const styleContent = {\r\n        width: cols*25 +'px',\r\n        height: rows*25 +'px'\r\n    }\r\n    const styleBoard = {\r\n        width: cols*25 + 4 +'px',\r\n        height: rows*25 + 44 +'px'\r\n    }\r\n\r\n    let content = null\r\n    let header = <Header text=\"\" ></Header>\r\n\r\n    if (!started){\r\n            content = <Button onClick={ startGame }>Start</Button>\r\n        } else{\r\n            content = cells.map((cell, index) => { \r\n            return <Cell key={index} \r\n                         cell={ cell } \r\n                         isFinished={isFinished}\r\n                         onToggleMarked={ onToggleMarked } \r\n                         onClick={onClick}\r\n                         /> \r\n            })\r\n    }\r\n\r\n    if(!stopTimer){\r\n        header = <Header text=\"Boom! You Lost!\" end={isFinished} start={started} startGame={startGame} saveResults={ saveResults } disableSave={true}>\r\n                    <Timer handleTime={ handleTime }/>\r\n                    <div className={classes.Flags}>\r\n                        {mineCount - flaggedCount}\r\n                    </div>\r\n                 </Header>\r\n    }\r\n\r\n    if(win){\r\n        header = <Header text=\"Yay! You Won!\" end={win} start={started} startGame={startGame} saveResults={ saveResults }></Header>\r\n    }\r\n    return (\r\n            <div className={classes.MineField} style={styleBoard}>\r\n                { header }\r\n                <div className={classes.Content} style={styleContent}>\r\n                { content }\r\n                </div>\r\n            </div>\r\n      \r\n    )\r\n}\r\n\r\nexport default MineField\r\n","import React, { Component } from 'react'\r\nimport classes from './Minesweeper.css'\r\nimport MineField from './MineField/MineField'\r\nimport FinishGame from '../../../components/FinishGame/FinishGame'\r\n\r\nclass Minesweeper extends Component {\r\n\r\n    rows = 16\r\n    cols = 24\r\n    cellCount = this.cols*this.rows\r\n    mineCount = Math.floor((this.cellCount)/5.4)\r\n\r\n    generateCells = () => {\r\n        let id = 0\r\n        let x = 0\r\n        let y = 1\r\n        const cellArr = []\r\n       \r\n        for(let i=0; i<this.cellCount; i++){\r\n            if ( x < this.cols ){\r\n                 x++ \r\n                }else {\r\n                     y++; x=1 \r\n                    }\r\n\r\n            cellArr.push({ cordinates: [x,y], isMine: false, open: false, value: 0,  id: id++, marked: false })\r\n        }\r\n        return cellArr\r\n    }\r\n\r\n    state={\r\n        time: null,\r\n        cellArr: this.generateCells(),\r\n        started: false,\r\n        stopTimer: true,\r\n        isFinished: false,\r\n        saveResults: false,\r\n        flaggedCount: 0,\r\n        win: false\r\n    }\r\n\r\n    startGame = () => {\r\n        this.setState({  \r\n        time: null,\r\n        cellArr: this.generateCells(this.cellCount),\r\n        started: true,\r\n        stopTimer: true,\r\n        isFinished: false,\r\n        saveResults: false,\r\n        win: false,\r\n        flaggedCount: 0\r\n     })\r\n    }\r\n\r\n    saveResults = () => {\r\n        this.setState({saveResults: true})\r\n    }\r\n\r\n    onGameWin = ()=>{\r\n        const cells = JSON.parse(JSON.stringify(this.state.cellArr))\r\n        const openned = cells.filter(el=>el.open===true).length\r\n        const wrongFlags = cells.filter(el=>el.marked && !el.isMine).length\r\n\r\n        if(openned===(this.cellCount-this.mineCount) && wrongFlags===0){\r\n            this.setState({win: true})\r\n        }\r\n\r\n    }\r\n\r\n    onClick = (id) => {\r\n        let cells = JSON.parse(JSON.stringify(this.state.cellArr))\r\n        const idx = cells.findIndex(el=> el.id === id)\r\n        let counter = JSON.parse(JSON.stringify(this.state.flaggedCount))\r\n        const cell = cells[idx]\r\n\r\n        if(this.state.stopTimer && !cell.marked){\r\n            cells=this.generateMines(cell, cells)\r\n            this.setState({ stopTimer: false })\r\n        } \r\n        if(cell.value===0 && !cell.marked){\r\n            this.revealEmpty(idx, cells)\r\n        }\r\n        if(cell.value>0 && !cell.marked){\r\n            this.openCell(idx, cells)\r\n        }\r\n\r\n        if(cell.isMine && !cell.marked){\r\n           this.gameOver(cells)\r\n           cell.epicenter = true\r\n           this.setState({ isFinished: true })\r\n        }\r\n\r\n        this.setState({ cellArr: cells }, () => {\r\n            if(counter===this.mineCount){\r\n                this.onGameWin()\r\n            }\r\n        })\r\n    }\r\n\r\n    gameOver = (cells) => {\r\n        cells.forEach(cell => cell.isMine === true && !cell.marked ? cell.open=true : cell)\r\n        return cells\r\n    }\r\n\r\n    openCell = (idx, cells) => {\r\n        cells[idx].open = true\r\n    }\r\n\r\n    revealEmpty = (idx, cells) => {\r\n        let area = this.getNeighbours(idx, cells);\r\n\r\n        area.forEach(value => {\r\n            if (!value.marked && !value.open && !value.isMine) {\r\n                const idx = cells.findIndex(cell => cell.id === value.id)\r\n                cells[idx].open = true;\r\n            if (value.value === 0) {\r\n                 this.revealEmpty(idx, cells);\r\n            }\r\n        }})\r\n    }\r\n\r\n    getNeighbours = (idx, cells)=>{\r\n        const neighbourCells = []\r\n        const x = cells[idx].cordinates[0]\r\n        const y = cells[idx].cordinates[1]\r\n        let cellIdx\r\n\r\n       \r\n        cellIdx = cells.findIndex(el => el.cordinates[0] === x && el.cordinates[1] === y)\r\n        neighbourCells.push(cells[cellIdx])\r\n   \r\n        if( x>1 && y>1 ){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x-1 && el.cordinates[1] === y-1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if( y>1 ){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x && el.cordinates[1] === y-1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if( x<this.cols && y>1 ){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x+1 && el.cordinates[1] === y-1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if( x>1 ){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x-1 && el.cordinates[1] === y)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if(x<this.cols){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x+1 && el.cordinates[1] === y)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if(x>1 && y<this.rows){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x-1 && el.cordinates[1] === y+1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if(y<this.rows){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x && el.cordinates[1] === y+1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n        if(x<this.cols && y<this.rows){\r\n            cellIdx = cells.findIndex(el => el.cordinates[0] === x+1 && el.cordinates[1] === y+1)\r\n            neighbourCells.push(cells[cellIdx])\r\n        }\r\n\r\n        return neighbourCells\r\n    }\r\n\r\n    generateMines = (cell, cells) => {\r\n        const mineArr = []\r\n        let counter = 0\r\n\r\n        while(counter<this.mineCount){\r\n            const idx = Math.round(Math.random()*(this.cellCount-1))    \r\n            if( cells[idx].id === cell.id || cells[idx].isMine ){\r\n               continue\r\n            }\r\n            cells[idx].isMine = true\r\n            cells[idx].value = -1\r\n            mineArr.push(cells[idx])\r\n            counter++\r\n        }\r\n         mineArr.forEach(mine => {this.setNumbers(mine, cells)}) \r\n        return cells\r\n    }\r\n\r\n    setNumbers = (mine, cells) => {\r\n       \r\n        let x = mine.cordinates[0]\r\n        let y = mine.cordinates[1]\r\n        let idx\r\n            \r\n            if( x>1 && y>1 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x-1 && cell.cordinates[1] === y-1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( y>1 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x && cell.cordinates[1] === y-1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( x<this.cols && y>1 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x+1 && cell.cordinates[1] === y-1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( x>1 ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x-1 && cell.cordinates[1] === y)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( x<this.cols ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x+1 && cell.cordinates[1] === y)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            \r\n            if( x>1 && y<this.rows ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x-1 && cell.cordinates[1] === y+1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( y<this.rows ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x && cell.cordinates[1] === y+1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n            if( x<this.cols && y<this.rows ){\r\n                idx = cells.findIndex(cell => cell.cordinates[0] === x+1 && cell.cordinates[1] === y+1)\r\n                if(!cells[idx].isMine){\r\n                    cells[idx].value++\r\n                }\r\n            }\r\n    }\r\n    \r\n    onToggleMarked = (id, e) => {\r\n        e.preventDefault()\r\n        const cells = JSON.parse(JSON.stringify(this.state.cellArr))\r\n        const idx = cells.findIndex(el => el.id === id)\r\n        let counter = JSON.parse(JSON.stringify(this.state.flaggedCount))\r\n        \r\n        if(!cells[idx].open && !this.state.isFinished){\r\n           cells[idx].marked = !cells[idx].marked\r\n           if(cells[idx].marked){\r\n            counter++\r\n           }else{\r\n            counter--\r\n           }\r\n\r\n           if(counter===this.mineCount){\r\n               this.onGameWin()\r\n           }\r\n        }\r\n        this.setState({ cellArr: cells, flaggedCount: counter })  \r\n    }\r\n\r\n    handleTime = (time) => {\r\n            this.setState({ time })\r\n        }\r\n\r\n    render() {  \r\n        const {cellArr, stopTimer, isFinished, started, win, flaggedCount, saveResults }=this.state\r\n        return (\r\n            <div className={classes.Minesweeper}>\r\n                {saveResults ? <FinishGame game={\"Minesweeper\"} startNew={this.startGame} time={this.state.time} />\r\n                     : <MineField \r\n                        mineCount={this.mineCount}\r\n                        saveResults={this.saveResults}\r\n                        win={win}\r\n                        isFinished={isFinished}\r\n                        started={ started }\r\n                        startGame={this.startGame}\r\n                        stopTimer={ stopTimer }\r\n                        cells={ cellArr } \r\n                        onToggleMarked={ this.onToggleMarked } \r\n                        onClick={ this.onClick }\r\n                        handleTime={this.handleTime}\r\n                        flaggedCount={flaggedCount}\r\n                        rows={this.rows}\r\n                        cols={this.cols}\r\n                    />\r\n                }\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Minesweeper\r\n","import React from 'react';\nimport withLayout from './hoc/Layout/Layout';\n\nfunction App() {\n  return (  \n    <>\n    </>\n  )\n}\n\nexport default withLayout(App);\n","import React, { Component } from 'react'\r\nimport classes from './Layout.css'\r\nimport Drawer from '../../components/Drawer/Drawer'\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\r\nimport  Stats  from '../../components/Stats/Stats';\r\nimport MemoryGame from '../../containers/Games/MemoryGame/MemoryGame'\r\nimport Snake from '../../containers/Games/Snake/Snake';\r\nimport Gamelist from '../../containers/GameList/Gamelist';\r\nimport Menu from '../../components/Menu/Menu';\r\nimport Minesweeper from '../../containers/Games/Minesweeper/Minesweeper';\r\nimport FinishGame from '../../components/FinishGame/FinishGame';\r\nimport LeaderboardRenderer from '../../components/Stats/LeaderboardRenderer/LeaderboardRenderer';\r\n\r\nconst withLayout = (WrappedComponent) => {\r\n    class Layout extends Component{\r\n        state={\r\n            isOpen: false\r\n        }\r\n\r\n        toggleDrawer = () => {\r\n            this.setState(({ isOpen }) => {\r\n               return { isOpen: !isOpen }\r\n            })\r\n        }\r\n        render() {\r\n            return (      \r\n                <div className={classes.Layout}>\r\n                    <WrappedComponent />\r\n                    <Router>\r\n                        <Menu />\r\n                        <Drawer \r\n                         isOpen={this.state.isOpen}\r\n                         toggleDrawer={this.toggleDrawer}\r\n                        />   \r\n                        <Switch>\r\n                          <Route path=\"/\" exact component={Gamelist} />\r\n                          <Route path=\"/stats\" exact component={Stats} />\r\n                          <Route path=\"/stats/:id\" component={LeaderboardRenderer} />\r\n                          <Route path=\"/finish\" exact component={FinishGame} /> \r\n                          <Route path=\"/snake-game\" exact component={Snake} />\r\n                          <Route path=\"/memory-game\" exact component={MemoryGame} /> \r\n                          <Route path=\"/minesweeper\" exact component={Minesweeper} /> \r\n                          <Route path=\"/about\"/>\r\n                          <Redirect to=\"/\" />\r\n                        </Switch>\r\n                    </Router>\r\n                </div>            \r\n            )\r\n        }\r\n    }\r\n    return Layout   \r\n}\r\n\r\nexport default withLayout\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport classes from './index.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n  \nconst app = <div className ={classes.Index}><App /></div>\n\nReactDOM.render( app, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}